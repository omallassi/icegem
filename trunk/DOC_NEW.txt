Example:
    class Company {
        private List<String> addressList;
        //
        @TransientGetter
        public List<String> getAddressList() {return addressList;}
        public void setAddressList(List<String> addressList) {this.addressList = addressList;}
        //
        public String[] getAddressListAsArray() {return addressList.toArray();}
        public void setAddressListAsArray(String[] addressListAsArray) {this.addressList = Arrays.asList(addressListAsArray);}
    }

*) JdkTypes:
    byte, ... 
    Byte, ...
    Class, String, Date, File, InetAddress, Properties
    ArrayList, LinkedList, HashMap, TreeMap, IdentityHashMap, LinkedHashSet, HashSet, TreeSet,
    Hashtable, Vector

    writeX-> ?Enum, Object, Region, Stack,
    DS-> Inet4Address, Inet6Address,

    arrays of every dimentions of previous classes

*) static getter type:

*) rt getter type:

*) PRINCIPLES:
    - ���������� - ������ ��������� ������� �������
        1) ������� �� ������ ���������� ��� ��������������
        ???2) ������� �� ������ ���������� ��� ������������ (��� ���� ���� ���������� ��������� � ���������? ��� �� ���� �������������� DS?)
    - ������ - ���������� ��������� ����� ������� ��������� ��������
    - �������� - ������� ������������ � �������������� ��������� � ������������ ���������
    - ����������� ��������� ������ � �������� ���/�����

*) ��������������
    - �������������� ��������� DS
*) �����������
    - generate + compile classes
*) SPRING INTEGRATION (+ �������������� � �� �������� �� ����������)
*) ������� ������������� (2 ���������, ���� ��� ������, ��� ����)
    @AutoSerializable
        - ��� ������� ������� ������� ����� ������������ ��� ��� ������ ���� ���������� � ���������������
        - ��� ��������� ����� ������ ������� ����������� �������������� �������� ������ ��� ���
        - ��������� @AutoSerializable �� �����������
        - ���� ����� ���� ������������ ����, �� �������� - ���������� (������: Figure: {@SerClass-Oval, @SerClass-Rect})
        - (��� ��������� - ���� ������������ ����, �������� ����������, �.�. �� ���������, ��� ������������ ����������� ������)
        - ���� ����� ���� ���������� �������, �����������, ����������� (???enum, ???collection) //todo: really?
    @TransientGetter
        ? ������� ����� ?������? ���������� ������ //todo: really?
        ? ������� ����� ���������� ������ ?������? �������������� ������ //todo: really?
        - ������� ����� ����� ���������� ������ �������������� ������ //todo: really?
        - ��������� @TransientGetter �� �����������
        - ���� ����� ���� ����������/������������ ����, �� ��� ������������ ������� ������ ����������/������������� �������� //todo: wtf?
    How to get sources of generated classes?
        //todo: doc



*) ������� ������
    - bean validation
        - ����������� ���������� ������ (public, @SC, ?enum ?collection)
        - ����������� ���������� ������������
            - public
            - no-arg
            - does not throws any checked exception        
        - ������ ��� ������ ������������ �� get*
        - ����������� ���������� getter-��
            - public
            - no-arg
            - not void/return some type
            - throws no checked exception
            - exist setter
                - public
                - the same name
                - the same arg type (Integer/int - diff types)
                - return void
        - �� ���� �������� ������ ������� (�� �����)
        - ����������� ���������� ��������-��
        - P.S. we don't support conventions for array/List (java code conventions)        
    - bean serialization
    ? when we use DS as type-dispatcher?
*) ��������� ����������
*) INTERNAL ARCHITECTURE


*) PROJECT STRUCTURE + TEST/BUILD PROCESS
    - structure:
        <groupId>com.griddynamics.gemfire.serialization</groupId>
        <artifactId>gemfire-serialization-core</artifactId> - CORE
        <artifactId>gemfire-serialization-spring</artifactId> - SPRING
        <artifactId>gemfire-serialization-performance</artifactId> - PERFORMANCE
        <artifactId>gemfire-serialization-examples</artifactId> - EXAMPLES
    - test:
        - mvn clean test //todo:
    - build:
        - mvn clean package //todo:
            CORE: core/target/gemfire-serialization-core-{version}.jar //todo: version exist?
                - "library jar" without dependencies //todo: really?
            SPRING: core/target/gemfire-serialization-spring-{version}.jar //todo: version exist?
                - "library jar" without dependencies //todo: really?
            PERFORMANCE: core/target/gemfire-serialization-performance-{version}.jar //todo: version exist?
                - executable jar contained all dependencies
                - run: java -jar gemfire-serialization-performance-0.1.jar
            EXAMPLES:
                core/target/gemfire-serialization-examples-web-server-{version}.jar //todo: no version now
                core/target/gemfire-serialization-examples-web-client-{version}.jar //todo: no version now
                core/target/gemfire-serialization-examples-console-server-{version}.jar //todo: no version now
                core/target/gemfire-serialization-examples-console-client-{version}.jar //todo: no version now
//todo: perf - don't unpack libs
//todo: examples - now don't build console cl/server

