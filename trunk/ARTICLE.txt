1. самые известные сериализаторы, перечень, особенности, история, причины появления, фоорматы в которые сериализуют
    - отличие: передача точного типа или "стирание": List<-ArrayList, Map<-?, Collection<-?
    - отличие: сериализуем только бины или произвольные? (доступ по геттерам или по филдам)
    - отличие: есть ли кастомизация сер/десер: readResolve()/... etc
    - отличие: версионирование протокола, версионирование класса бина, совместимость разных версий бина
    - аналог POF в Coherence (вынять значение не десериализуя)
    - interface Serializable
    - отличие: пересылает или нет классы
    - отличие #0: speed/size

2. бенчмарки сериализаторов
3. - что есть в GemFire (короткие id класса, короткий инт для размера массива)
   - что есть нет в GemFire (передача ?Locale, ?Calendar, ?Date, ?Integer[])
4. что использовано в нашем
    - динамическая кодогенерация и отсутствие рефлексии
    - сортировка полей и отсутствие field-Id
    - в случае неизвестного типа - диспечерезация за счет GF
    - один бит на null
    ? известный перечень классов - так что 0-1-2 бита на поле дискриминатора
    ? проверка все ли сущности в коллекции одного типа